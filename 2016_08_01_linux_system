cho.sungjae@gmail.com : 커널 시스템 프로그래밍을 진행할 것

OS ? 자원 관리자 사용자 프로그램 하드웨어 커널 시스템콜
시스템콜 ? 윈도에서 시스템 함수를 호출하는것 ?
시스템콜과 커널 ? API ? 프로그램을 통해서 사용자가 운영체제에 제어함수를 통해서
  하드웨어 제어, 사용자 제어, 네트워크, 그래픽, 외부 장치와 통신할 수 있게 함

커널 ? hal : hardware abstraction layer ? 소프트웨어에서 쓰려고 ?

운영체제의 구성이 어케 되는지, 어떤 기능을 하는지, 어떻게 구현할 수 있는지에 대해 얘기

소프트웨어
-------------------------
하드웨어 : CPU, 마우스, 모니터, 메모리, 디스크, GPU, FPU, NVRAM, CacheMemory, MMU
  LANCARD, RTC, BIOS, SystemBus 등

  CPU -> RAM -> BusController
  NVRAM, BIOS ? 부팅에 사용, 하드웨어 검증에 사용 -> firmware
    모든 하드드라이브에 firmware 존재
    nvram : os 부팅전에 프로그램 저장 공간 (bios, uefi)

    os 에는 프로그램이 동시 실행됨, 저장 장치로부터 실제 내용을 불러오고,
      os 에서 실행 가능한지 안한지 판단하고 주 메모리 영역에 데이터를 올림
    아두이노는 이런걸 따르지 않음 -> firmware (os 가 아님)

    프로그램과 펌웨어의 차이 ? 변경의 가능성 ? 반복되고 고정된일 ?
      자원 분배, 자원의 전환, 할당과 회수가 불필요함
      -> 프로그램 하나의 의도대로 운영됨

      OS : CPU 를 할당 분배, 자원의 전환, 할당과 회수를 프로그래밍 해야함
        메모리와 캐시, CPU 를 어떻게 제어할 것인가

        CPU ? 시분할 시스템을 이용 ? scheduler 필요, 타이머, 인터럽트
          스케쥴러의 스택을 인터럽트에 의해 제어함
          : 소프트웨어 인터럽트 ? OS 에서 사용자가 실행 우선순위를 바꾸었을 때,
              스케쥴러 내의 스택을 재정렬할 때 소프트웨어 인터럽트가 실행됨
          메모리도 이용 (context switching)
          하드웨어 인터럽트와 소프트웨어 인터럽트에 의한 이용이 가능해짐

    입출력 장치 : MMU, cache ?

    intel controller hub ? pci bus, usb bus, firewire bus 등
    장치를 사용하려면 ? 드라이버의 로딩과 언로딩이 가능하게끔 만들어야 함
      주메모리에 장치를 사용할 수 있는 프로그램을 적재해야함

      드라이버를 메모리에 로딩, CPU 값을 변환하는 프로시져를 제작하고,
        값을 주고 받을 메모리 윈도를 만들고, OS 외의 다른 프로그램이 쓰지 못하게 만듬
        => 이 영역을 쓰기 위한 것이 api 고 드라이버 시스템 콜

        버스를 지나가는 패킷, 프로토콜을 PCI Express 프로토콜이라함
        PCI Bus 는 병렬, PCI Express 는 직렬

        
