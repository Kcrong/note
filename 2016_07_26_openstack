offensive security 보다는 defense system 을 구축할 수 있는 사람도 필요하다
offensive security 에 대해 깊이는 있지만, 전체적 넓은 시야로 보안을 보는 사람들은
  굉장히 극소수 이다.
극소적인 문제에만 집착하는, 시야가 좁은 인재도 필요하지만
  넓은 시야로 defense system 을 구축할 수 있는 그런 인력이 될 수도 있어야 한다.

오픈스택 - 클라우드
  안드로이드 악성 코드를 분석하는 환경이 약함 -> 클라우드에서 분석해보자
    -> 클라우드 기반의 분석 플랫폼 : 클라우드 작업량이 증가
  클라우드의 변화가 일어나고 있는 현황
    -> 변화의 중심에 있는 것이 오픈 스택
    ex) naver cloud, icloud, google drive
  아마존의 awx 가 가장 큰 클라우드, MS 의 Azure
    -> 가지고 있는 핵심 기술 ? 가상화 virtualization
    -> 가상화가 존재하지 않으면 클라우드라 할 수 없음

  많은 대기업들이 오픈스택을 많이 사용함
    어떤 벤더에 종속되면 락인 문제가 생김
      (의존도가 높아질 수록, 부적절한 정책에 따라가야함)
    오픈 스택은 락인 문제를 낮춰줌
    배포 비용이 낮음
    주기적 업데이트

  기존 클라우드 : basic kernel -> hypervisor -> virtual machine
    KVM, Xen, ESX 와 같은 하이퍼 바이져 위에 생성됨
    일반적인 가상머신은 각자의 독립된 운영체제의 개별 커널을 가짐

  컨테이너 기술 : 호스트 운영체제에서 실행 중인 프로세스를 의미
    가상 머신을 몇 100개, 몇 천개를 돌려야 한다면 부담이 큼
    개개의 호스트 OS 는 같은 운영체제임에도
      매 머신마다 운영체제 (30 ~ 80GB 차지)가 설치됨
    -> hypervisor 을 내리고, 컨테이너를 사용하자

  app processor : 전체 커널에서 통제
  container : 독립적  -> ex) docker
    vm 500개 설치 ? 6개월 정도
    container : 1달 이내, 2 ~ 3주 이내 -> 훨씬더 효율적
  openstack container ? 미래의 클라우드 플랫폼 방향

  이상적인 컨테이너 : 프로세스 안에 운영체제 응용프로그램을 설치
  운영체제 전체를 포함할 필요가 없기 때문에 굉장히 가벼움
    가상화된 객체를 만들어 냄
  Portable : 컨테이너가 이미지로 이동
    -> image 다운 후 설치하면 바로 컨테이너가 돌아감

  컨테이너 : 마이크로 서비스를 캡슐화하는데 도움이 됨
    응용 프로그램 배포가 빠름 (image 를 통함 protablization)
    간소화된 개발과 테스트
    응용 프로그램 배포 비용 감소
    서버 통합이 가능해짐

  아직까지 보안이 강하지는 않음
